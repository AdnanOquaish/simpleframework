<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <bean id="CompanyTableSchema" class="org.simpleframework.demo.table.schema.TableSchema">
    <constructor-arg value="mainGrid" />
    <constructor-arg>
      <list>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidOutrightVolume" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div style='font-weight: bold; text-decoration: underline; color: #0000ff;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=bid&type=outright', 'dialog', 600, 700)">{bidOutrightVolume}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="$ B" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidOutright" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div style='font-weight: bold; text-decoration: underline; color: #0000ff;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=bid&type=outright', 'dialog', 600, 700)">{bidOutright}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Bid" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerOutright" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div style='font-weight: bold; text-decoration: underline; color: #ff0000;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=offer&type=outright', 'dialog', 600, 700)">{offerOutright}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Offer" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerOutrightVolume" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div style='font-weight: bold; text-decoration: underline; color: #ff0000;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=offer&type=outright', 'dialog', 600, 700)">{offerOutrightVolume}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="{offerOutrightHighlight}" />
          <constructor-arg value="$ O" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="product" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div style='font-weight: bold;'>{product}</div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Security" />
          <constructor-arg value="80" />          
          <constructor-arg value="true" />
          <constructor-arg value="true" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidEFPVolume" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div style='font-weight: bold; text-decoration: underline; color: #0000ff;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=bid&type=EFP', 'dialog', 600, 700)">{bidEFPVolume}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="$ B" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidEFP" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div style='font-weight: bold; text-decoration: underline; color: #0000ff;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=bid&type=EFP', 'dialog', 600, 700)">{bidEFP}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Bid" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerEFP" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div style='font-weight: bold; text-decoration: underline; color: #ff0000;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=offer&type=EFP', 'dialog', 600, 700)">{offerEFP}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Offer" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerEFPVolume" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div style='font-weight: bold; text-decoration: underline; color: #ff0000;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=offer&type=EFP', 'dialog', 600, 700)">{offerEFPVolume}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="$ O" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="reference" />
          <constructor-arg value="{reference}" />
          <constructor-arg value="" />
          <constructor-arg value="Ref" />
        </bean>
      </list>
    </constructor-arg>
  </bean>

  <bean id="CompanyRowExtractor" class="org.simpleframework.demo.table.extract.RowExtractor">
    <constructor-arg>
      <map>
        <entry key="bidEFP">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.bid[EFP].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerEFP">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.offer[EFP].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="bidEFPVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.bid[EFP].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerEFPVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.offer[EFP].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="bidOutright">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.bid[OUTRIGHT].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerOutright">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.offer[OUTRIGHT].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="bidOutrightVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.bid[OUTRIGHT].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerOutrightVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.offer[OUTRIGHT].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="product">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="security" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="reference">
          <bean class="org.simpleframework.demo.table.extract.StaticCellExtractor">
            <constructor-arg value="3ySep" />
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>
  
  <bean id="CompanyRowFormatter" class="org.simpleframework.demo.table.format.RowFormatter">
    <constructor-arg>
      <map>
        <entry key="bidEFP">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.00" />
          </bean>
        </entry>
        <entry key="offerEFP">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.00" />
          </bean>
        </entry>
        <entry key="bidOutright">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.0000" />
          </bean>
        </entry>
        <entry key="offerOutright">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.0000" />
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>   

  <bean id="CompanyTable" class="org.simpleframework.demo.table.product.ProductTable" />

  <bean id="CompanyTableModel" class="org.simpleframework.demo.table.product.ProductTableModel">
    <constructor-arg ref="CompanyTable" />
  </bean>
  
  <bean id="CompanyTableUpdater" class="org.simpleframework.demo.table.message.TableUpdater" init-method="start">
    <constructor-arg ref="CompanyTableModel" />
    <constructor-arg ref="CompanyTableSchema" />
    <constructor-arg ref="CompanyRowExtractor" />
    <constructor-arg ref="CompanyRowFormatter" />
    <constructor-arg ref="ThreadPool"/>           
  </bean>  

  <bean id="CompanyEFPTableSchema" class="org.simpleframework.demo.table.schema.TableSchema">
    <constructor-arg value="litEFPGrid" />
    <constructor-arg>
      <list>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="product" />
          <constructor-arg>
            <value><![CDATA[<div style='font-weight: bold; color: #ffffff; color: #ffffff;'>{product}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Security" />
          <constructor-arg value="80" />          
          <constructor-arg value="true" />
          <constructor-arg value="true" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="reference" />
          <constructor-arg>
            <value><![CDATA[<div style='color: #ffffff;'>/ {reference}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Ref" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidEFPVolume" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline; color: #ffffff;'>{bidEFPVolume}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="$ B" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidEFP" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline; color: #ffffff;'>{bidEFP}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Bid" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerEFP" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline; color: #ffffff;'>{offerEFP}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Offer" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerEFPVolume" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline; color: #ffffff;'>{offerEFPVolume}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="$ O" />
        </bean>
      </list>
    </constructor-arg>
  </bean>

  <bean id="CompanyEFPRowExtractor" class="org.simpleframework.demo.table.extract.RowExtractor">
    <constructor-arg>
      <map>
        <entry key="bidEFP">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.bid[EFP].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerEFP">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.offer[EFP].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="bidEFPVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.bid[EFP].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerEFPVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.offer[EFP].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="product">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="security" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="reference">
          <bean class="org.simpleframework.demo.table.extract.StaticCellExtractor">
            <constructor-arg value="3ySep" />
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>
  
  <bean id="CompanyEFPRowFormatter" class="org.simpleframework.demo.table.format.RowFormatter">
    <constructor-arg>
      <map>
        <entry key="bidEFP">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.00" />
          </bean>
        </entry>
        <entry key="offerEFP">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.00" />
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>    

  <bean id="CompanyEFPTable" class="org.simpleframework.demo.table.product.ProductTable" />

  <bean id="CompanyEFPTableModel" class="org.simpleframework.demo.table.product.ProductTableModel">
    <constructor-arg ref="CompanyEFPTable" />
  </bean>
  
  <bean id="CompanyEFPTableUpdater" class="org.simpleframework.demo.table.message.TableUpdater" init-method="start">
    <constructor-arg ref="CompanyEFPTableModel" />
    <constructor-arg ref="CompanyEFPTableSchema" />
    <constructor-arg ref="CompanyEFPRowExtractor" />
    <constructor-arg ref="CompanyEFPRowFormatter" />
    <constructor-arg ref="ThreadPool"/>           
  </bean>  

  <bean id="CompanySwitchTableSchema" class="org.simpleframework.demo.table.schema.TableSchema">
    <constructor-arg value="litSwitchGrid" />
    <constructor-arg>
      <list>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="product" />
          <constructor-arg>
            <value><![CDATA[<div style='font-weight: bold; color: #ffffff;'>{product}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Security" />
          <constructor-arg value="80" />                
          <constructor-arg value="true" />
          <constructor-arg value="true" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="reference" />
          <constructor-arg>
            <value><![CDATA[<div style='color: #ffffff;'>/ {reference}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Ref" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidEFPVolume" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline; color: #ffffff;'>{bidEFPVolume}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="$ B" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidEFP" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline; color: #ffffff;'>{bidEFP}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Bid" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerEFP" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline; color: #ffffff;'>{offerEFP}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Offer" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerEFPVolume" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline; color: #ffffff;'>{offerEFPVolume}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="$ O" />
        </bean>
      </list>
    </constructor-arg>
  </bean>

  <bean id="CompanySwitchRowExtractor" class="org.simpleframework.demo.table.extract.RowExtractor">
    <constructor-arg>
      <map>
        <entry key="bidEFP">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.bid[EFP].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerEFP">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.offer[EFP].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="bidEFPVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.bid[EFP].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerEFPVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="companyDepth.offer[EFP].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="product">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="security" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="reference">
          <bean class="org.simpleframework.demo.table.extract.StaticCellExtractor">
            <constructor-arg value="3ySep" />
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>

  <bean id="CompanySwitchRowFormatter" class="org.simpleframework.demo.table.format.RowFormatter">
    <constructor-arg>
      <map>
        <entry key="bidEFP">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.00" />
          </bean>
        </entry>
        <entry key="offerEFP">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.00" />
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>    
  
  <bean id="CompanySwitchTable" class="org.simpleframework.demo.table.product.ProductTable" />

  <bean id="CompanySwitchTableModel" class="org.simpleframework.demo.table.product.ProductTableModel">
    <constructor-arg ref="CompanySwitchTable" />
  </bean>
  
  <bean id="CompanySwitchTableUpdater" class="org.simpleframework.demo.table.message.TableUpdater" init-method="start">
    <constructor-arg ref="CompanySwitchTableModel" />
    <constructor-arg ref="CompanySwitchTableSchema" />
    <constructor-arg ref="CompanySwitchRowExtractor" />
    <constructor-arg ref="CompanySwitchRowFormatter" />
    <constructor-arg ref="ThreadPool"/>           
  </bean>  
  
  <bean id="CompanyTableService" class="org.simpleframework.demo.table.message.TableService">
    <constructor-arg>
      <list>
        <ref bean="CompanyTableUpdater" />
        <ref bean="CompanyEFPTableUpdater" />
        <ref bean="CompanySwitchTableUpdater" />
      </list>
    </constructor-arg>
    <constructor-arg ref="PerformanceAnalyzer" />
    <constructor-arg ref="ProductStaticSource" />    
  </bean>  

</beans>
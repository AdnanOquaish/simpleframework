<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <bean id="LogConfigurer" class="org.simpleframework.demo.log4j.LogConfigurer" init-method="configure">
    <constructor-arg value="${log4j.configFile}" />
  </bean>

  <bean id="ContentTypeResolver" class="org.simpleframework.demo.http.resource.ContentTypeResolver">
    <constructor-arg>
      <map>
        <entry key=".*.vm" value="text/html" />
        <entry key=".*.html" value="text/html" />
        <entry key=".*.png" value="image/png" />
        <entry key=".*.gif" value="image/gif" />
        <entry key=".*.css" value="text/css" />
        <entry key=".*.js" value="text/javascript" />
        <entry key=".*" value="text/html" />
      </map>
    </constructor-arg>
  </bean>

  <bean id="FileManager" class="org.simpleframework.demo.http.resource.FileManager">
    <constructor-arg value="data/${context.path}" />
  </bean>

  <bean id="FileResolver" class="org.simpleframework.demo.http.resource.FileResolver">
    <constructor-arg ref="FileManager" />
    <constructor-arg value="index.html" />
    <constructor-arg value="index.html" />
  </bean>

  <bean id="FileSystemResource" class="org.simpleframework.demo.http.resource.FileSystemResource">
    <constructor-arg ref="FileResolver" />
    <constructor-arg ref="ContentTypeResolver" />
  </bean>

  <bean id="NotFoundResource" class="org.simpleframework.demo.http.resource.StringResource">
    <constructor-arg value="Resource could not be found!!" />
    <constructor-arg value="text/plain; charset=UTF-8" />
    <constructor-arg value="UTF-8" />
    <constructor-arg value="NOT_FOUND" />
  </bean>

  <bean id="FoundResource" class="org.simpleframework.demo.http.resource.StringResource">
    <constructor-arg value="Redirecting to /index.html" />
    <constructor-arg value="text/plain; charset=UTF-8" />
    <constructor-arg value="UTF-8" />
    <constructor-arg value="FOUND" />
  </bean>

  <bean id="RedirectResource" class="org.simpleframework.demo.http.resource.RedirectResource">
    <constructor-arg ref="FoundResource" />
    <constructor-arg value="/index.html" />
  </bean>

  <bean id="FailureResource" class="org.simpleframework.demo.http.resource.StringResource">
    <constructor-arg value="An error occured serving a resource!" />
    <constructor-arg value="text/plain; charset=UTF-8" />
    <constructor-arg value="UTF-8" />
    <constructor-arg value="INTERNAL_SERVER_ERROR" />
  </bean>

  <bean id="TableSchema" class="org.simpleframework.demo.table.TableSchema">
    <constructor-arg>
      <map>
        <entry key="id">
          <bean class="org.simpleframework.demo.table.TableColumnStyle">
            <constructor-arg value="id" />
            <constructor-arg value="Id" />
            <constructor-arg value="{id}" />
            <constructor-arg value="true" />
            <constructor-arg value="true" />
          </bean>
        </entry>
        <entry key="bidOutrightVolume">
          <bean class="org.simpleframework.demo.table.TableColumnStyle">
            <constructor-arg value="bidOutrightVolume" />
            <constructor-arg value="$ B" />
            <constructor-arg value="&lt;div style='font-weight: bold; color: #0000ff; text-decoration: underline;'&gt;{bidOutrightVolume}&lt;/a&gt;" />
            <constructor-arg value="true" />
            <constructor-arg value="false" />
          </bean>
        </entry>
        <entry key="bidOutright">
          <bean class="org.simpleframework.demo.table.TableColumnStyle">
            <constructor-arg value="bidOutright" />
            <constructor-arg value="Bid" />
            <constructor-arg value="&lt;div style='font-weight: bold; color: #0000ff; text-decoration: underline;'&gt;{bidOutright}&lt;/a&gt;" />
            <constructor-arg value="true" />
            <constructor-arg value="false" />
          </bean>
        </entry>
        <entry key="offerOutright">
          <bean class="org.simpleframework.demo.table.TableColumnStyle">
            <constructor-arg value="offerOutright" />
            <constructor-arg value="Offer" />
            <constructor-arg value="&lt;div style='font-weight: bold; color: #ff0000; text-decoration: underline;'&gt;{offerOutright}&lt;/a&gt;" />
            <constructor-arg value="true" />
            <constructor-arg value="false" />
          </bean>
        </entry>
        <entry key="offerOutrightVolume">
          <bean class="org.simpleframework.demo.table.TableColumnStyle">
            <constructor-arg value="offerOutrightVolume" />
            <constructor-arg value="$ O" />
            <constructor-arg value="&lt;div style='font-weight: bold; color: #ff0000; text-decoration: underline;'&gt;{offerOutrightVolume}&lt;/a&gt;" />
            <constructor-arg value="true" />
            <constructor-arg value="false" />
          </bean>
        </entry>
        <entry key="product">
          <bean class="org.simpleframework.demo.table.TableColumnStyle">
            <constructor-arg value="product" />
            <constructor-arg value="Security" />
            <constructor-arg value="&lt;div style='font-weight: bold;'&gt;{product}&lt;/div&gt;" />
            <constructor-arg value="true" />
            <constructor-arg value="true" />
          </bean>
        </entry>
        <entry key="bidEFPVolume">
          <bean class="org.simpleframework.demo.table.TableColumnStyle">
            <constructor-arg value="bidEFPVolume" />
            <constructor-arg value="$ B" />
            <constructor-arg value="&lt;div style='font-weight: bold; color: #0000ff; text-decoration: underline;'&gt;{bidEFPVolume}&lt;/a&gt;" />
            <constructor-arg value="true" />
            <constructor-arg value="false" />
          </bean>
        </entry>
        <entry key="bidEFP">
          <bean class="org.simpleframework.demo.table.TableColumnStyle">
            <constructor-arg value="bidEFP" />
            <constructor-arg value="Bid" />
            <constructor-arg value="&lt;div style='font-weight: bold; color: #0000ff; text-decoration: underline;'&gt;{bidEFP}&lt;/a&gt;" />
            <constructor-arg value="true" />
            <constructor-arg value="false" />
          </bean>
        </entry>
        <entry key="offerEFP">
          <bean class="org.simpleframework.demo.table.TableColumnStyle">
            <constructor-arg value="offerEFP" />
            <constructor-arg value="Offer" />
            <constructor-arg value="&lt;div style='font-weight: bold; color: #ff0000; text-decoration: underline;'&gt;{offerEFP}&lt;/a&gt;" />
            <constructor-arg value="true" />
            <constructor-arg value="false" />
          </bean>
        </entry>
        <entry key="offerEFPVolume">
          <bean class="org.simpleframework.demo.table.TableColumnStyle">
            <constructor-arg value="offerEFPVolume" />
            <constructor-arg value="$ O" />
            <constructor-arg value="&lt;div style='font-weight: bold; color: #ff0000; text-decoration: underline;'&gt;{offerEFPVolume}&lt;/a&gt;" />
            <constructor-arg value="true" />
            <constructor-arg value="false" />
          </bean>
        </entry>
        <entry key="reference">
          <bean class="org.simpleframework.demo.table.TableColumnStyle">
            <constructor-arg value="reference" />
            <constructor-arg value="Ref" />
            <constructor-arg value="{reference}" />
            <constructor-arg value="true" />
            <constructor-arg value="true" />
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>

  <bean id="TableRowAnnotator" class="org.simpleframework.demo.table.TableRowAnnotator">
    <constructor-arg ref="TableSchema" />
  </bean>

  <bean id="TableUpdater" class="org.simpleframework.demo.table.TableUpdater" init-method="start">
    <constructor-arg value="id" />
    <constructor-arg ref="TableSchema" />
    <constructor-arg ref="TableRowAnnotator" />
  </bean>

  <bean id="ScriptCompiler" class="org.simpleframework.demo.js.ScriptCompiler">
    <constructor-arg value="SIMPLE_OPTIMIZATIONS" />
  </bean>

  <bean id="ScriptProcessor" class="org.simpleframework.demo.js.ScriptProcessor">
    <constructor-arg ref="ScriptCompiler" />
    <constructor-arg value="data/${context.path}" />
  </bean>

  <bean id="ScriptResource" class="org.simpleframework.demo.http.resource.ScriptResource">
    <constructor-arg ref="ScriptProcessor" />
    <constructor-arg value="text/javascript" />
    <constructor-arg value="gzip" />
  </bean>

  <bean id="ResourceEngine" class="org.simpleframework.demo.http.resource.RegularExpressionEngine">
    <constructor-arg>
      <map>
        <entry key=".*favicon.ico" value-ref="NotFoundResource" />
        <entry key=".*.html" value-ref="FileSystemResource" />
        <entry key=".*.png" value-ref="FileSystemResource" />
        <entry key=".*.css" value-ref="FileSystemResource" />
        <entry key=".*.js" value-ref="ScriptResource" />
        <entry key="/" value-ref="RedirectResource" />
      </map>
    </constructor-arg>
    <constructor-arg ref="NotFoundResource" />
  </bean>

  <bean id="ResourceContainer" class="org.simpleframework.demo.http.resource.ResourceContainer">
    <constructor-arg ref="ResourceEngine" />
    <constructor-arg ref="FailureResource" />
  </bean>

  <bean id="WebContainer" class="org.simpleframework.demo.http.WebContainer">
    <constructor-arg ref="ResourceContainer" />
    <constructor-arg value="Table/1.0" />
  </bean>

  <bean id="WebSocketRouter" class="org.simpleframework.http.socket.service.SingletonRouter">
    <constructor-arg ref="TableUpdater" />
  </bean>

  <bean id="WebSocketContainer" class="org.simpleframework.http.socket.service.RouterContainer" init-method="start">
    <constructor-arg ref="WebContainer" />
    <constructor-arg ref="WebSocketRouter" />
    <constructor-arg value="2" />
  </bean>

  <bean id="WebServer" class="org.simpleframework.demo.http.WebServer" init-method="start">
    <constructor-arg ref="WebSocketContainer" />
    <constructor-arg value="${server.listenPort}" />
  </bean>

</beans>

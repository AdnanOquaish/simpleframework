<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <bean id="BestTableSchema" class="org.simpleframework.demo.table.schema.TableSchema">
    <constructor-arg value="mainGrid" />
    <constructor-arg>
      <list>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidOutrightVolume" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div title='{bidOutrightTooltip}' style='font-weight: bold; text-decoration: underline;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=bid&type=outright', 'dialog', 600, 700)">{bidOutrightVolume}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="{bidOutrightHighlight}" />
          <constructor-arg value="$ B" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidOutright" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div title='{bidOutrightTooltip}' style='font-weight: bold; text-decoration: underline;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=bid&type=outright', 'dialog', 600, 700)">{bidOutright}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="{bidOutrightHighlight}" />
          <constructor-arg value="Bid" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerOutright" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div title='{offerOutrightTooltip}' style='font-weight: bold; text-decoration: underline;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=offer&type=outright', 'dialog', 600, 700)">{offerOutright}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="{offerOutrightHighlight}" />
          <constructor-arg value="Offer" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerOutrightVolume" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div title='{offerOutrightTooltip}' style='font-weight: bold; text-decoration: underline;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=offer&type=outright', 'dialog', 600, 700)">{offerOutrightVolume}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="{offerOutrightHighlight}" />
          <constructor-arg value="$ O" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="product" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div style='font-weight: bold;'>{product}</div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Security" />
          <constructor-arg value="80"/>
          <constructor-arg value="true" />
          <constructor-arg value="true" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidEFPVolume" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div title='{bidEFPTooltip}' style='font-weight: bold; text-decoration: underline;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=bid&type=EFP', 'dialog', 600, 700)">{bidEFPVolume}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="{bidEFPHighlight}" />
          <constructor-arg value="$ B" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidEFP" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div title='{bidEFPTooltip}' style='font-weight: bold; text-decoration: underline;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=bid&type=EFP', 'dialog', 600, 700)">{bidEFP}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="{bidEFPHighlight}" />
          <constructor-arg value="Bid" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerEFP" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div title='{offerEFPTooltip}' style='font-weight: bold; text-decoration: underline;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=offer&type=EFP', 'dialog', 600, 700)">{offerEFP}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="{offerEFPHighlight}" />
          <constructor-arg value="Offer" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerEFPVolume" />
          <constructor-arg>
            <value>
              <![CDATA[
                <div title='{offerEFPTooltip}' style='font-weight: bold; text-decoration: underline;'>
                  <span style='cursor: pointer; cursor: hand;' onclick="return openDialog('/trade.html?products={product}&side=offer&type=EFP', 'dialog', 600, 700)">{offerEFPVolume}</span>
                </div>
              ]]>
            </value>
          </constructor-arg>
          <constructor-arg value="{offerEFPHighlight}" />
          <constructor-arg value="$ O" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="reference" />
          <constructor-arg value="{reference}" />
          <constructor-arg value="" />
          <constructor-arg value="Ref" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.HiddenColumnStyle">
          <constructor-arg value="bidEFPHighlight" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.HiddenColumnStyle">
          <constructor-arg value="offerEFPHighlight" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.HiddenColumnStyle">
          <constructor-arg value="bidOutrightHighlight" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.HiddenColumnStyle">
          <constructor-arg value="offerOutrightHighlight" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.HiddenColumnStyle">
          <constructor-arg value="bidEFPTooltip" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.HiddenColumnStyle">
          <constructor-arg value="offerEFPTooltip" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.HiddenColumnStyle">
          <constructor-arg value="bidOutrightTooltip" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.HiddenColumnStyle">
          <constructor-arg value="offerOutrightTooltip" />
        </bean>
      </list>
    </constructor-arg>
  </bean>

  <bean id="BestRowExtractor" class="org.simpleframework.demo.table.extract.RowExtractor">
    <constructor-arg>
      <map>
        <entry key="bidEFP">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.bid[EFP].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerEFP">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.offer[EFP].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="bidEFPVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.bid[EFP].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerEFPVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.offer[EFP].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="bidOutright">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.bid[OUTRIGHT].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerOutright">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.offer[OUTRIGHT].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="bidOutrightVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.bid[OUTRIGHT].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerOutrightVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.offer[OUTRIGHT].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="product">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="security" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="reference">
          <bean class="org.simpleframework.demo.table.extract.StaticCellExtractor">
            <constructor-arg value="3ySep" />
          </bean>
        </entry>
        <entry key="bidEFPHighlight">
          <bean class="org.simpleframework.demo.table.extract.PredicateCellExtractor">
            <constructor-arg value="companyDepth.bid[EFP].top.company == filteredDepth.bid[EFP].top.company &amp;&amp; companyDepth.bid[EFP].top.company != 'null'" />
            <constructor-arg value="background-color: #008500; color: #ffffff;" />
            <constructor-arg value="color: #0000ff;" />
          </bean>
        </entry>
        <entry key="offerEFPHighlight">
          <bean class="org.simpleframework.demo.table.extract.PredicateCellExtractor">
            <constructor-arg value="companyDepth.offer[EFP].top.company == filteredDepth.offer[EFP].top.company &amp;&amp; companyDepth.offer[EFP].top.company != 'null'" />
            <constructor-arg value="background-color: #008500; color: #ffffff; " />
            <constructor-arg value="color: #ff0000;" />
          </bean>
        </entry>
        <entry key="bidOutrightHighlight">
          <bean class="org.simpleframework.demo.table.extract.PredicateCellExtractor">
            <constructor-arg value="companyDepth.bid[OUTRIGHT].top.company == filteredDepth.bid[OUTRIGHT].top.company &amp;&amp; companyDepth.bid[OUTRIGHT].top.company != 'null'" />
            <constructor-arg value="background-color: #008500; color: #ffffff;" />
            <constructor-arg value="color: #0000ff;" />
          </bean>
        </entry>
        <entry key="offerOutrightHighlight">
          <bean class="org.simpleframework.demo.table.extract.PredicateCellExtractor">
            <constructor-arg value="companyDepth.offer[OUTRIGHT].top.company == filteredDepth.offer[OUTRIGHT].top.company &amp;&amp; companyDepth.offer[OUTRIGHT].top.company != 'null'" />
            <constructor-arg value="background-color: #008500; color: #ffffff;" />
            <constructor-arg value="color: #ff0000;" />
          </bean>
        </entry>
        <entry key="bidEFPTooltip">
          <bean class="org.simpleframework.demo.table.extract.PredicateCellExtractor">
            <constructor-arg value="companyDepth.bid[EFP].top.company == filteredDepth.bid[EFP].top.company &amp;&amp; companyDepth.bid[EFP].top.company != 'null'" />
            <constructor-arg value="Yay! you are the best at {bidEFP} for {product}" />
            <constructor-arg value="Your price for {product} is {bidEFP}" />
          </bean>
        </entry>
        <entry key="offerEFPTooltip">
          <bean class="org.simpleframework.demo.table.extract.PredicateCellExtractor">
            <constructor-arg value="companyDepth.offer[EFP].top.company == filteredDepth.offer[EFP].top.company &amp;&amp; companyDepth.offer[EFP].top.company != 'null'" />
            <constructor-arg value="Yay! you are the best at {offerEFP} for {product}" />
            <constructor-arg value="Your price for {product} is {offerEFP}" />
          </bean>
        </entry>
        <entry key="bidOutrightTooltip">
          <bean class="org.simpleframework.demo.table.extract.PredicateCellExtractor">
            <constructor-arg value="companyDepth.bid[OUTRIGHT].top.company == filteredDepth.bid[OUTRIGHT].top.company &amp;&amp; companyDepth.bid[OUTRIGHT].top.company != 'null'" />
            <constructor-arg value="Yay! you are the best at {bidOutright} for {product}" />
            <constructor-arg value="Your price for {product} is {bidOutright}" />
          </bean>
        </entry>
        <entry key="offerOutrightTooltip">
          <bean class="org.simpleframework.demo.table.extract.PredicateCellExtractor">
            <constructor-arg value="companyDepth.offer[OUTRIGHT].top.company == filteredDepth.offer[OUTRIGHT].top.company &amp;&amp; companyDepth.offer[OUTRIGHT].top.company != 'null'" />
            <constructor-arg value="Yay! you are the best at {offerOutright} for {product}" />
            <constructor-arg value="Your price for {product} is {offerOutright}" />
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>
  
  <bean id="BestRowFormatter" class="org.simpleframework.demo.table.format.RowFormatter">
    <constructor-arg>
      <map>
        <entry key="bidEFP">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.00" />
          </bean>
        </entry>
        <entry key="offerEFP">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.00" />
          </bean>
        </entry>
        <entry key="bidOutright">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.0000" />
          </bean>
        </entry>
        <entry key="offerOutright">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.0000" />
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>   

  <bean id="BestTable" class="org.simpleframework.demo.table.product.ProductTable" />

  <bean id="BestTableModel" class="org.simpleframework.demo.table.product.ProductTableModel">
    <constructor-arg ref="BestTable" />
  </bean>
  
  <bean id="BestTableUpdater" class="org.simpleframework.demo.table.message.TableUpdater" init-method="start">
    <constructor-arg ref="BestTableModel" />
    <constructor-arg ref="BestTableSchema" />
    <constructor-arg ref="BestRowExtractor" />
    <constructor-arg ref="BestRowFormatter" />
    <constructor-arg ref="ThreadPool"/>           
  </bean>  

  <bean id="BestEFPTableSchema" class="org.simpleframework.demo.table.schema.TableSchema">
    <constructor-arg value="litEFPGrid" />
    <constructor-arg>
      <list>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="product" />
          <constructor-arg>
            <value><![CDATA[<div style='font-weight: bold; color: #ffffff;'>{product}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Security" />
          <constructor-arg value="80" />                
          <constructor-arg value="true" />
          <constructor-arg value="true" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="reference" />
          <constructor-arg>
            <value><![CDATA[<div style='color: #ffffff;'>/ {reference}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Ref" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidEFPVolume" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline;'>{bidEFPVolume}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="{bidEFPHighlight}" />
          <constructor-arg value="$ B" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidEFP" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline;'>{bidEFP}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="{bidEFPHighlight}" />
          <constructor-arg value="Bid" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerEFP" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline;'>{offerEFP}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="{offerEFPHighlight}" />
          <constructor-arg value="Offer" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerEFPVolume" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline;'>{offerEFPVolume}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="{offerEFPHighlight}" />
          <constructor-arg value="$ O" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.HiddenColumnStyle">
          <constructor-arg value="bidEFPHighlight" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.HiddenColumnStyle">
          <constructor-arg value="offerEFPHighlight" />
        </bean>
      </list>
    </constructor-arg>
  </bean>

  <bean id="BestEFPRowExtractor" class="org.simpleframework.demo.table.extract.RowExtractor">
    <constructor-arg>
      <map>
        <entry key="bidEFP">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.bid[EFP].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerEFP">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.offer[EFP].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="bidEFPVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.bid[EFP].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerEFPVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.offer[EFP].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="product">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="security" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="reference">
          <bean class="org.simpleframework.demo.table.extract.StaticCellExtractor">
            <constructor-arg value="3ySep" />
          </bean>
        </entry>
        <entry key="bidEFPHighlight">
          <bean class="org.simpleframework.demo.table.extract.PredicateCellExtractor">
            <constructor-arg value="companyDepth.bid[EFP].top.company == filteredDepth.bid[EFP].top.company &amp;&amp; companyDepth.bid[EFP].top.company != 'null'" />
            <constructor-arg value="font-weight: bold; color: #ffffff;" />
            <constructor-arg value="color: #888888;" />
          </bean>
        </entry>
        <entry key="offerEFPHighlight">
          <bean class="org.simpleframework.demo.table.extract.PredicateCellExtractor">
            <constructor-arg value="companyDepth.offer[EFP].top.company == filteredDepth.offer[EFP].top.company &amp;&amp; companyDepth.offer[EFP].top.company != 'null'" />
            <constructor-arg value="font-weight: bold; color: #ffffff; " />
            <constructor-arg value="color: #888888;" />
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>
  
  <bean id="BestEFPRowFormatter" class="org.simpleframework.demo.table.format.RowFormatter">
    <constructor-arg>
      <map>
        <entry key="bidEFP">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.00" />
          </bean>
        </entry>
        <entry key="offerEFP">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.00" />
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>    

  <bean id="BestEFPTable" class="org.simpleframework.demo.table.product.ProductTable" />

  <bean id="BestEFPTableModel" class="org.simpleframework.demo.table.product.ProductTableModel">
    <constructor-arg ref="BestEFPTable" />
  </bean>
  
  <bean id="BestEFPTableUpdater" class="org.simpleframework.demo.table.message.TableUpdater" init-method="start">
    <constructor-arg ref="BestEFPTableModel" />
    <constructor-arg ref="BestEFPTableSchema" />
    <constructor-arg ref="BestEFPRowExtractor" />
    <constructor-arg ref="BestEFPRowFormatter" />
    <constructor-arg ref="ThreadPool"/>           
  </bean>  

  <bean id="BestSwitchTableSchema" class="org.simpleframework.demo.table.schema.TableSchema">
    <constructor-arg value="litSwitchGrid" />
    <constructor-arg>
      <list>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="product" />
          <constructor-arg>
            <value><![CDATA[<div style='font-weight: bold; color: #ffffff;'>{product}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Security" />
          <constructor-arg value="80" />                
          <constructor-arg value="true" />
          <constructor-arg value="true" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="reference" />
          <constructor-arg>
            <value><![CDATA[<div style='color: #ffffff;'>/ {reference}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="" />
          <constructor-arg value="Ref" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidEFPVolume" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline;'>{bidEFPVolume}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="{bidEFPHighlight}" />
          <constructor-arg value="$ B" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="bidEFP" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline;'>{bidEFP}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="{bidEFPHighlight}" />
          <constructor-arg value="Bid" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerEFP" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline;'>{offerEFP}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="{offerEFPHighlight}" />
          <constructor-arg value="Offer" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.StringColumnStyle">
          <constructor-arg value="offerEFPVolume" />
          <constructor-arg>
            <value><![CDATA[<div style='text-decoration: underline;'>{offerEFPVolume}</div>]]></value>
          </constructor-arg>
          <constructor-arg value="{offerEFPHighlight}" />
          <constructor-arg value="$ O" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.HiddenColumnStyle">
          <constructor-arg value="bidEFPHighlight" />
        </bean>
        <bean class="org.simpleframework.demo.table.schema.HiddenColumnStyle">
          <constructor-arg value="offerEFPHighlight" />
        </bean>
      </list>
    </constructor-arg>
  </bean>

  <bean id="BestSwitchRowExtractor" class="org.simpleframework.demo.table.extract.RowExtractor">
    <constructor-arg>
      <map>
        <entry key="bidEFP">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.bid[EFP].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerEFP">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.offer[EFP].top.price" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="bidEFPVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.bid[EFP].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="offerEFPVolume">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="filteredDepth.offer[EFP].top.volume" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="product">
          <bean class="org.simpleframework.demo.table.extract.PropertyCellExtractor">
            <constructor-arg value="security" />
            <constructor-arg value="org.simpleframework.demo.table.product.Product" />
          </bean>
        </entry>
        <entry key="reference">
          <bean class="org.simpleframework.demo.table.extract.StaticCellExtractor">
            <constructor-arg value="3ySep" />
          </bean>
        </entry>
        <entry key="bidEFPHighlight">
          <bean class="org.simpleframework.demo.table.extract.PredicateCellExtractor">
            <constructor-arg value="companyDepth.bid[EFP].top.company == filteredDepth.bid[EFP].top.company &amp;&amp; companyDepth.bid[EFP].top.company != 'null'" />
            <constructor-arg value="font-weight: bold; color: #ffffff;" />
            <constructor-arg value="color: #888888;" />
          </bean>
        </entry>
        <entry key="offerEFPHighlight">
          <bean class="org.simpleframework.demo.table.extract.PredicateCellExtractor">
            <constructor-arg value="companyDepth.offer[EFP].top.company == filteredDepth.offer[EFP].top.company &amp;&amp; companyDepth.offer[EFP].top.company != 'null'" />
            <constructor-arg value="font-weight: bold; color: #ffffff;" />
            <constructor-arg value="color: #888888;" />
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>

  <bean id="BestSwitchRowFormatter" class="org.simpleframework.demo.table.format.RowFormatter">
    <constructor-arg>
      <map>
        <entry key="bidEFP">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.00" />
          </bean>
        </entry>
        <entry key="offerEFP">
          <bean class="org.simpleframework.demo.table.format.DecimalCellFormatter">
            <constructor-arg value="#.00" />
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>    
  
  <bean id="BestSwitchTable" class="org.simpleframework.demo.table.product.ProductTable" />

  <bean id="BestSwitchTableModel" class="org.simpleframework.demo.table.product.ProductTableModel">
    <constructor-arg ref="BestSwitchTable" />
  </bean>
  
  <bean id="BestSwitchTableUpdater" class="org.simpleframework.demo.table.message.TableUpdater" init-method="start">
    <constructor-arg ref="BestSwitchTableModel" />
    <constructor-arg ref="BestSwitchTableSchema" />
    <constructor-arg ref="BestSwitchRowExtractor" />
    <constructor-arg ref="BestSwitchRowFormatter" />
    <constructor-arg ref="ThreadPool"/>           
  </bean>  
  
  <bean id="BestTableService" class="org.simpleframework.demo.table.message.TableService">
    <constructor-arg>
      <list>
        <ref bean="BestTableUpdater" />
        <ref bean="BestEFPTableUpdater" />
        <ref bean="BestSwitchTableUpdater" />
      </list>
    </constructor-arg>
    <constructor-arg ref="PerformanceAnalyzer" />
    <constructor-arg ref="ProductStaticSource" />    
  </bean>  

</beans>